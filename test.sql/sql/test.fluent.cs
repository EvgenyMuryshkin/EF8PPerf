// autogenerated by ServerDbGenerator
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable IDE0017 // Object Initialization
#pragma warning disable IDE0028 // Collection Initialization
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning disable CS0105 // Using directive appeared previously in this namespace
#pragma warning disable CS0612 // Type or member is obsolete
using crosscutting;
using crosscutting.sql;
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Threading.Tasks;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using crosscutting.cqrs;
namespace test.sql
{
	using test.sql;
	using test.model;
	using test.model;
// generated class, do not modify, source here: file:///placeholder
public partial class tstTestDBContext : EntityDbContext<tstTestDBContext>
{
	protected override void OnModelCreating(ModelBuilder builder)
	{
		builder.HasDefaultSchema(SchemaName);
		builder.Entity<tstT016CompositeChildRecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstCompositeChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstCompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstCompositesContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstMixedContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstMultipleCompositeRefDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstMultipleSharedContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstMultipleSharedRefDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstNestedCompositeRootDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstNestedCompositesDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstOptionalCompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstOptionalSharedRefDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstOwnerContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstParentWithSharedListDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstRawDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstRequiredSharedRefDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstSharedContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT001ChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT001ParentOwnerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT002ChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT002ChildHolderDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT002ParentOwnerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT003ChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT003ChildHolderDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT003ParentOwnerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT004RecursiveLinkSetDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT005RecursiveLinkListDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT006PerfMaxQueryItemDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT006PerfMaxQueryValueDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT007LeafDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT007RootDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT008ParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT009CompositeDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT009PrincipalDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT009UserDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT010CompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT011CompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT011CompositeRefParentContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT012CompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT012CompositeRefParentContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT013CompositeRefParentDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT013CompositeRefParentContainerDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT014AutoCreateValueDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
			b.Property(e => e.ReferenceId).HasDefaultValue(tstConstants.RawId);
			b.Property(e => e.IntValue).HasDefaultValue(42);
			b.Property(e => e.DecimalValue).HasDefaultValue(42);
			b.Property(e => e.DecimalValue).HasPrecision(18, 2);
			b.Property(e => e.EnumValue).HasDefaultValue(tstT014State.State1);
		});
		builder.Entity<tstT015ChildL1RecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT015ChildL2RecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT015ChildOwnedRecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT015CompositeChildDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT015ParentOrderedRecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT015ParentRecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT016CompositeParentRecordDbRecord>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstT010CompositeRefChildDbEntity>(b => {
			b.HasKey(e => e.Id);
			b.HasIndex(e => e.Id).IsUnique();
		});
		builder.Entity<tstOwnerContainer_tstRaw_Raws>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstSharedContainer_tstRaw_Shareds>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstMultipleSharedContainer_tstRaw_FirstShareds>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstMultipleSharedContainer_tstRaw_SecondShareds>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstMixedContainer_tstRaw_Owneds>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstMixedContainer_tstRaw_Shareds>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstNestedCompositeRoot_tstRaw_RawLists>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstParent_tstChild_Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT001ParentOwner_tstT001Child_T001Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstParentWithSharedList_tstRaw_RawLists>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT002ParentOwner_tstT002Child_T002Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT003ParentOwner_tstT003Child_T003Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT007Leaf_tstT007Leaf_T007Leaves>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT007Root_tstT007Leaf_T007Leaves>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT015ParentRecord_tstT015ChildL1Record_Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT015ChildL1Record_tstT015ChildL2Record_Children>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		builder.Entity<tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren>().HasKey(lnk => new { lnk.ParentId, lnk.ChildId });
		PostModelCreating(builder);
	}
}
}
#pragma warning restore CS0612 // Type or member is obsolete
#pragma warning restore CS0105 // Using directive appeared previously in this namespace
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning restore IDE0028 // Collection Initialization
#pragma warning restore IDE0017 // Object Initialization
#pragma warning restore IDE1006 // Naming Styles
