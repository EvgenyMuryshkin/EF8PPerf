// autogenerated by ServerDbGenerator
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable IDE0017 // Object Initialization
#pragma warning disable IDE0028 // Collection Initialization
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning disable CS0105 // Using directive appeared previously in this namespace
#pragma warning disable CS0612 // Type or member is obsolete
using crosscutting;
using crosscutting.sql;
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Threading.Tasks;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using crosscutting.cqrs;
namespace test.sql
{
	using test.sql;
	using test.model;
	using test.model;
// generated class, do not modify, source here: file:///placeholder
public partial class tstTestDBContext : EntityDbContext<tstTestDBContext>
{
	// back references of composites
	// tstCompositeChild
	public IQueryable<tstCompositeChildDbEntity> CompositeChildrenWithBackRefs => 
		CompositeChildren
			.Include(p => p.CompositeRefParents_Composite)
			.Include(p => p.CompositesContainer)
			.Include(p => p.MultipleCompositeRefs_Composite)
			.Include(p => p.MultipleCompositeRefs_OptionalComposite)
			.Include(p => p.NestedCompositeRoots_Composite)
			.Include(p => p.NestedCompositeRoots_OptionalComposite)
			//.Include(p => p.NestedComposites)
			//.Include(p => p.NestedComposites_Composite)
			.Include(p => p.OptionalCompositeRefParents_Composite)
			.Include(p => p.T001Children_CompositeChild)
			.Include(p => p.T008Parents_Child)
			//.Include(p => p.T011CompositeRefParentContainer)
			//.Include(p => p.T011CompositeRefParentContainers_CompositeChild)
			//.Include(p => p.T012CompositeRefParentContainers_CompositeChild)
			//.Include(p => p.T013CompositeRefParentContainer)
		;
	// ==============
	// tstNestedComposites
	public IQueryable<tstNestedCompositesDbEntity> NestedCompositesWithBackRefs => 
		NestedComposites
			.Include(p => p.NestedCompositeRoots_Nested)
		;
	// ==============
	// tstT009Composite
	public IQueryable<tstT009CompositeDbEntity> T009CompositesWithBackRefs => 
		T009Composites
			.Include(p => p.T009Principal)
			.Include(p => p.T009Principals_Composite)
		;
	// ==============
	// tstT011CompositeRefParentContainer
	public IQueryable<tstT011CompositeRefParentContainerDbEntity> T011CompositeRefParentContainersWithBackRefs => 
		T011CompositeRefParentContainers
			.Include(p => p.T011CompositeRefParents_Container)
		;
	// ==============
	// tstT012CompositeRefParentContainer
	public IQueryable<tstT012CompositeRefParentContainerDbEntity> T012CompositeRefParentContainersWithBackRefs => 
		T012CompositeRefParentContainers
			.Include(p => p.T012CompositeRefParents_Container)
		;
	// ==============
	// tstT013CompositeRefParentContainer
	public IQueryable<tstT013CompositeRefParentContainerDbEntity> T013CompositeRefParentContainersWithBackRefs => 
		T013CompositeRefParentContainers
			.Include(p => p.T013CompositeRefParents_Container)
		;
	// ==============
	// tstT010CompositeRefChild
	public IQueryable<tstT010CompositeRefChildDbEntity> T010CompositeRefChildrenWithBackRefs => 
		T010CompositeRefChildren
			.Include(p => p.T010CompositeRefParent)
			.Include(p => p.T010CompositeRefParents_T010CompositeRefChild)
		;
	// ==============
}
}
#pragma warning restore CS0612 // Type or member is obsolete
#pragma warning restore CS0105 // Using directive appeared previously in this namespace
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning restore IDE0028 // Collection Initialization
#pragma warning restore IDE0017 // Object Initialization
#pragma warning restore IDE1006 // Naming Styles
