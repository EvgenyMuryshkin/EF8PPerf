// autogenerated by ServerDbGenerator
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable IDE0017 // Object Initialization
#pragma warning disable IDE0028 // Collection Initialization
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning disable CS0105 // Using directive appeared previously in this namespace
#pragma warning disable CS0612 // Type or member is obsolete
using crosscutting;
using crosscutting.sql;
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Threading.Tasks;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
namespace test.sql
{
	using test.sql;
// generated class, do not modify, source here: file:///placeholder
public partial class tstTestDBContext : EntityDbContext<tstTestDBContext>
{
	public static string SchemaName => "tst";
	public tstTestDBContext(Guid platformId, DbContextOptions<tstTestDBContext> options) : base(platformId, options) { OnContextCreated(options); }
	public DbSet<tstCompositeChildDbEntity> CompositeChildren { get; set; }
	public DbSet<tstNestedCompositesDbEntity> NestedComposites { get; set; }
	public DbSet<tstT009CompositeDbEntity> T009Composites { get; set; }
	public DbSet<tstT010CompositeRefChildDbEntity> T010CompositeRefChildren { get; set; }
	public DbSet<tstT011CompositeRefParentContainerDbEntity> T011CompositeRefParentContainers { get; set; }
	public DbSet<tstT012CompositeRefParentContainerDbEntity> T012CompositeRefParentContainers { get; set; }
	public DbSet<tstT013CompositeRefParentContainerDbEntity> T013CompositeRefParentContainers { get; set; }
	public DbSet<tstT015CompositeChildDbRecord> T015CompositeChildren { get; set; }
	public DbSet<tstT016CompositeChildRecordDbRecord> T016CompositeChildRecords { get; set; }
	public DbSet<tstRawDbEntity> Raws { get; set; }
	public DbSet<tstRequiredSharedRefDbEntity> RequiredSharedRefs { get; set; }
	public DbSet<tstOptionalSharedRefDbEntity> OptionalSharedRefs { get; set; }
	public DbSet<tstCompositeRefParentDbEntity> CompositeRefParents { get; set; }
	public DbSet<tstOptionalCompositeRefParentDbEntity> OptionalCompositeRefParents { get; set; }
	public DbSet<tstOwnerContainerDbEntity> OwnerContainers { get; set; }
	public DbSet<tstCompositesContainerDbEntity> CompositesContainers { get; set; }
	public DbSet<tstSharedContainerDbEntity> SharedContainers { get; set; }
	public DbSet<tstMultipleSharedContainerDbEntity> MultipleSharedContainers { get; set; }
	public DbSet<tstMixedContainerDbEntity> MixedContainers { get; set; }
	public DbSet<tstMultipleCompositeRefDbEntity> MultipleCompositeRefs { get; set; }
	public DbSet<tstMultipleSharedRefDbEntity> MultipleSharedRefs { get; set; }
	public DbSet<tstNestedCompositeRootDbEntity> NestedCompositeRoots { get; set; }
	public DbSet<tstChildDbEntity> Children { get; set; }
	public DbSet<tstParentDbEntity> Parents { get; set; }
	public DbSet<tstT001ChildDbEntity> T001Children { get; set; }
	public DbSet<tstT001ParentOwnerDbEntity> T001ParentOwners { get; set; }
	public DbSet<tstParentWithSharedListDbEntity> ParentWithSharedLists { get; set; }
	public DbSet<tstT002ChildDbEntity> T002Children { get; set; }
	public DbSet<tstT002ParentOwnerDbEntity> T002ParentOwners { get; set; }
	public DbSet<tstT002ChildHolderDbEntity> T002ChildHolders { get; set; }
	public DbSet<tstT003ChildDbEntity> T003Children { get; set; }
	public DbSet<tstT003ParentOwnerDbEntity> T003ParentOwners { get; set; }
	public DbSet<tstT003ChildHolderDbEntity> T003ChildHolders { get; set; }
	public DbSet<tstT004RecursiveLinkSetDbEntity> T004RecursiveLinkSets { get; set; }
	public DbSet<tstT005RecursiveLinkListDbEntity> T005RecursiveLinkLists { get; set; }
	public DbSet<tstT006PerfMaxQueryItemDbEntity> T006PerfMaxQueryItems { get; set; }
	public DbSet<tstT006PerfMaxQueryValueDbEntity> T006PerfMaxQueryValues { get; set; }
	public DbSet<tstT007LeafDbEntity> T007Leaves { get; set; }
	public DbSet<tstT007RootDbEntity> T007Roots { get; set; }
	public DbSet<tstT008ParentDbEntity> T008Parents { get; set; }
	public DbSet<tstT009PrincipalDbEntity> T009Principals { get; set; }
	public DbSet<tstT009UserDbEntity> T009Users { get; set; }
	public DbSet<tstT010CompositeRefParentDbEntity> T010CompositeRefParents { get; set; }
	public DbSet<tstT011CompositeRefParentDbEntity> T011CompositeRefParents { get; set; }
	public DbSet<tstT012CompositeRefParentDbEntity> T012CompositeRefParents { get; set; }
	public DbSet<tstT013CompositeRefParentDbEntity> T013CompositeRefParents { get; set; }
	public DbSet<tstT014AutoCreateValueDbEntity> T014AutoCreateValues { get; set; }
	public DbSet<tstT015ParentRecordDbRecord> T015ParentRecords { get; set; }
	public DbSet<tstT015ChildL1RecordDbRecord> T015ChildL1Records { get; set; }
	public DbSet<tstT015ChildL2RecordDbRecord> T015ChildL2Records { get; set; }
	public DbSet<tstT015ChildOwnedRecordDbRecord> T015ChildOwnedRecords { get; set; }
	public DbSet<tstT015ParentOrderedRecordDbRecord> T015ParentOrderedRecords { get; set; }
	public DbSet<tstT016CompositeParentRecordDbRecord> T016CompositeParentRecords { get; set; }
	// link tables
	public DbSet<tstOwnerContainer_tstRaw_Raws> tstOwnerContainer_tstRaw_Raws { get; set; }
	public DbSet<tstSharedContainer_tstRaw_Shareds> tstSharedContainer_tstRaw_Shareds { get; set; }
	public DbSet<tstMultipleSharedContainer_tstRaw_FirstShareds> tstMultipleSharedContainer_tstRaw_FirstShareds { get; set; }
	public DbSet<tstMultipleSharedContainer_tstRaw_SecondShareds> tstMultipleSharedContainer_tstRaw_SecondShareds { get; set; }
	public DbSet<tstMixedContainer_tstRaw_Owneds> tstMixedContainer_tstRaw_Owneds { get; set; }
	public DbSet<tstMixedContainer_tstRaw_Shareds> tstMixedContainer_tstRaw_Shareds { get; set; }
	public DbSet<tstNestedCompositeRoot_tstRaw_RawLists> tstNestedCompositeRoot_tstRaw_RawLists { get; set; }
	public DbSet<tstParent_tstChild_Children> tstParent_tstChild_Children { get; set; }
	public DbSet<tstT001ParentOwner_tstT001Child_T001Children> tstT001ParentOwner_tstT001Child_T001Children { get; set; }
	public DbSet<tstParentWithSharedList_tstRaw_RawLists> tstParentWithSharedList_tstRaw_RawLists { get; set; }
	public DbSet<tstT002ParentOwner_tstT002Child_T002Children> tstT002ParentOwner_tstT002Child_T002Children { get; set; }
	public DbSet<tstT003ParentOwner_tstT003Child_T003Children> tstT003ParentOwner_tstT003Child_T003Children { get; set; }
	public DbSet<tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks> tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks { get; set; }
	public DbSet<tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks> tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks { get; set; }
	public DbSet<tstT007Leaf_tstT007Leaf_T007Leaves> tstT007Leaf_tstT007Leaf_T007Leaves { get; set; }
	public DbSet<tstT007Root_tstT007Leaf_T007Leaves> tstT007Root_tstT007Leaf_T007Leaves { get; set; }
	public DbSet<tstT015ParentRecord_tstT015ChildL1Record_Children> tstT015ParentRecord_tstT015ChildL1Record_Children { get; set; }
	public DbSet<tstT015ChildL1Record_tstT015ChildL2Record_Children> tstT015ChildL1Record_tstT015ChildL2Record_Children { get; set; }
	public DbSet<tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren> tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren { get; set; }
	public DbSet<tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren> tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren { get; set; }
}
}
#pragma warning restore CS0612 // Type or member is obsolete
#pragma warning restore CS0105 // Using directive appeared previously in this namespace
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning restore IDE0028 // Collection Initialization
#pragma warning restore IDE0017 // Object Initialization
#pragma warning restore IDE1006 // Naming Styles
