// autogenerated by ServerDbGenerator
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable IDE0017 // Object Initialization
#pragma warning disable IDE0028 // Collection Initialization
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning disable CS0105 // Using directive appeared previously in this namespace
#pragma warning disable CS0612 // Type or member is obsolete
using crosscutting;
using crosscutting.sql;
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Threading.Tasks;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using crosscutting.cqrs;
namespace test.sql
{
	using test.sql;
	using test.model;
	using test.model;
// generated class, do not modify, source here: file:///placeholder
[Table("T016CompositeChildRecords")]
public partial class tstT016CompositeChildRecordDbRecord : IDbRecord
{
	public long Id { get; set; }
	public int ChildValue { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }
	// Navigation properties
	// Back reference for tstT016CompositeParentRecord.ChildrenIds
	public long? T016CompositeParentRecordId { get; set; }
	[ForeignKey("T016CompositeParentRecordId")]
	public tstT016CompositeParentRecordDbRecord T016CompositeParentRecord { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("Children")]
public partial class tstChildDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstParent
	public Guid SecondParentId { get; set; }
	[ForeignKey("SecondParentId")]
	public tstParentDbEntity SecondParent { get; set; }

	// Navigation properties
	// Back relationship for tstParent.ChildrenIds, Owned
	[InverseProperty(nameof(tstParent_tstChild_Children.Child))]
	public List<tstParent_tstChild_Children> Parents_Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("CompositeChildren")]
public partial class tstCompositeChildDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	string _Value = "";
	public string Value { get => _Value ?? ""; set => _Value = value; }
	// Navigation properties
	// Back relationship for tstCompositeRefParent.Composite
	[InverseProperty(nameof(tstCompositeRefParentDbEntity.Composite))]
	public List<tstCompositeRefParentDbEntity> CompositeRefParents_Composite { get; set; } = new List<tstCompositeRefParentDbEntity>();
	// Back reference for tstCompositesContainer.CompositeIds
	public Guid? CompositesContainerId { get; set; }
	[ForeignKey("CompositesContainerId")]
	public tstCompositesContainerDbEntity CompositesContainer { get; set; }
	// Back relationship for tstMultipleCompositeRef.Composite
	[InverseProperty(nameof(tstMultipleCompositeRefDbEntity.Composite))]
	public List<tstMultipleCompositeRefDbEntity> MultipleCompositeRefs_Composite { get; set; } = new List<tstMultipleCompositeRefDbEntity>();
	// Back relationship for tstMultipleCompositeRef.OptionalComposite
	[InverseProperty(nameof(tstMultipleCompositeRefDbEntity.OptionalComposite))]
	public List<tstMultipleCompositeRefDbEntity> MultipleCompositeRefs_OptionalComposite { get; set; } = new List<tstMultipleCompositeRefDbEntity>();
	// Back relationship for tstNestedCompositeRoot.Composite
	[InverseProperty(nameof(tstNestedCompositeRootDbEntity.Composite))]
	public List<tstNestedCompositeRootDbEntity> NestedCompositeRoots_Composite { get; set; } = new List<tstNestedCompositeRootDbEntity>();
	// Back relationship for tstNestedCompositeRoot.OptionalComposite
	[InverseProperty(nameof(tstNestedCompositeRootDbEntity.OptionalComposite))]
	public List<tstNestedCompositeRootDbEntity> NestedCompositeRoots_OptionalComposite { get; set; } = new List<tstNestedCompositeRootDbEntity>();
	// Back relationship for tstNestedComposites.Composite
	[InverseProperty(nameof(tstNestedCompositesDbEntity.Composite))]
	public List<tstNestedCompositesDbEntity> NestedComposites_Composite { get; set; } = new List<tstNestedCompositesDbEntity>();
	// Back reference for tstNestedComposites.ChildrenIds
	public Guid? NestedCompositesId { get; set; }
	[ForeignKey("NestedCompositesId")]
	public tstNestedCompositesDbEntity NestedComposites { get; set; }
	public int IndexInNestedComposites { get; set; }
	// Back relationship for tstOptionalCompositeRefParent.Composite
	[InverseProperty(nameof(tstOptionalCompositeRefParentDbEntity.Composite))]
	public List<tstOptionalCompositeRefParentDbEntity> OptionalCompositeRefParents_Composite { get; set; } = new List<tstOptionalCompositeRefParentDbEntity>();
	// Back relationship for tstT001Child.CompositeChild
	[InverseProperty(nameof(tstT001ChildDbEntity.CompositeChild))]
	public List<tstT001ChildDbEntity> T001Children_CompositeChild { get; set; } = new List<tstT001ChildDbEntity>();
	// Back relationship for tstT008Parent.Child
	[InverseProperty(nameof(tstT008ParentDbEntity.Child))]
	public List<tstT008ParentDbEntity> T008Parents_Child { get; set; } = new List<tstT008ParentDbEntity>();
	// Back relationship for tstT011CompositeRefParentContainer.CompositeChild
	[InverseProperty(nameof(tstT011CompositeRefParentContainerDbEntity.CompositeChild))]
	public List<tstT011CompositeRefParentContainerDbEntity> T011CompositeRefParentContainers_CompositeChild { get; set; } = new List<tstT011CompositeRefParentContainerDbEntity>();
	// Back reference for tstT011CompositeRefParentContainer.CompositeChildrenIds
	public Guid? T011CompositeRefParentContainerId { get; set; }
	[ForeignKey("T011CompositeRefParentContainerId")]
	public tstT011CompositeRefParentContainerDbEntity T011CompositeRefParentContainer { get; set; }
	public int IndexInT011CompositeRefParentContainer { get; set; }
	// Back relationship for tstT012CompositeRefParentContainer.CompositeChild
	[InverseProperty(nameof(tstT012CompositeRefParentContainerDbEntity.CompositeChild))]
	public List<tstT012CompositeRefParentContainerDbEntity> T012CompositeRefParentContainers_CompositeChild { get; set; } = new List<tstT012CompositeRefParentContainerDbEntity>();
	// Back reference for tstT013CompositeRefParentContainer.CompositeChildrenIds
	public Guid? T013CompositeRefParentContainerId { get; set; }
	[ForeignKey("T013CompositeRefParentContainerId")]
	public tstT013CompositeRefParentContainerDbEntity T013CompositeRefParentContainer { get; set; }
	public int IndexInT013CompositeRefParentContainer { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("CompositeRefParents")]
public partial class tstCompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	string _Value = "";
	public string Value { get => _Value ?? ""; set => _Value = value; }

	// Reference to tstCompositeChild
	public Guid CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstCompositeChildDbEntity Composite { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("CompositesContainers")]
public partial class tstCompositesContainerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Index { get; set; } = 0;

	// Relationship to tstCompositeChild, Coposite
	public List<tstCompositeChildDbEntity> Composites { get; set; } = new List<tstCompositeChildDbEntity>();

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("MixedContainer_Raw_Owneds")]
public partial class tstMixedContainer_tstRaw_Owneds : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstMixedContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("MixedContainer_Raw_Shareds")]
public partial class tstMixedContainer_tstRaw_Shareds : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstMixedContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("MixedContainers")]
public partial class tstMixedContainerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstRaw, Owned
	public ICollection<tstMixedContainer_tstRaw_Owneds> Owneds { get; set; }


	// Relationship to tstRaw, Shared
	public ICollection<tstMixedContainer_tstRaw_Shareds> Shareds { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("MultipleCompositeRefs")]
public partial class tstMultipleCompositeRefDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstCompositeChild
	public Guid CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstCompositeChildDbEntity Composite { get; set; }


	// Reference to tstCompositeChild
	public Guid? OptionalCompositeId { get; set; }
	[ForeignKey("OptionalCompositeId")]
	public tstCompositeChildDbEntity OptionalComposite { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("MultipleSharedContainer_Raw_FirstShareds")]
public partial class tstMultipleSharedContainer_tstRaw_FirstShareds : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstMultipleSharedContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("MultipleSharedContainer_Raw_SecondShareds")]
public partial class tstMultipleSharedContainer_tstRaw_SecondShareds : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstMultipleSharedContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("MultipleSharedContainers")]
public partial class tstMultipleSharedContainerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstRaw, Shared
	public ICollection<tstMultipleSharedContainer_tstRaw_FirstShareds> FirstShareds { get; set; }


	// Relationship to tstRaw, Shared
	public ICollection<tstMultipleSharedContainer_tstRaw_SecondShareds> SecondShareds { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("MultipleSharedRefs")]
public partial class tstMultipleSharedRefDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstRaw
	public Guid RawId { get; set; }
	[ForeignKey("RawId")]
	public tstRawDbEntity Raw { get; set; }


	// Reference to tstRaw
	public Guid? OptionalRawId { get; set; }
	[ForeignKey("OptionalRawId")]
	public tstRawDbEntity OptionalRaw { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("NestedCompositeRoot_Raw_RawLists")]
public partial class tstNestedCompositeRoot_tstRaw_RawLists : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstNestedCompositeRootDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("NestedCompositeRoots")]
public partial class tstNestedCompositeRootDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstCompositeChild
	public Guid CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstCompositeChildDbEntity Composite { get; set; }


	// Reference to tstCompositeChild
	public Guid? OptionalCompositeId { get; set; }
	[ForeignKey("OptionalCompositeId")]
	public tstCompositeChildDbEntity OptionalComposite { get; set; }


	// Reference to tstNestedComposites
	public Guid NestedId { get; set; }
	[ForeignKey("NestedId")]
	public tstNestedCompositesDbEntity Nested { get; set; }


	// Reference to tstRaw
	public Guid? OptionalRawId { get; set; }
	[ForeignKey("OptionalRawId")]
	public tstRawDbEntity OptionalRaw { get; set; }


	// Relationship to tstRaw, Shared
	public ICollection<tstNestedCompositeRoot_tstRaw_RawLists> RawLists { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("NestedComposites")]
public partial class tstNestedCompositesDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();

	// Reference to tstCompositeChild
	public Guid CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstCompositeChildDbEntity Composite { get; set; }


	// Relationship to tstCompositeChild, Coposite
	public List<tstCompositeChildDbEntity> Children { get; set; } = new List<tstCompositeChildDbEntity>();

	// Navigation properties
	// Back relationship for tstNestedCompositeRoot.Nested
	[InverseProperty(nameof(tstNestedCompositeRootDbEntity.Nested))]
	public List<tstNestedCompositeRootDbEntity> NestedCompositeRoots_Nested { get; set; } = new List<tstNestedCompositeRootDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("OptionalCompositeRefParents")]
public partial class tstOptionalCompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstCompositeChild
	public Guid? CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstCompositeChildDbEntity Composite { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("OptionalSharedRefs")]
public partial class tstOptionalSharedRefDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public Guid Value { get; set; } = Guid.Empty;

	// Reference to tstRaw
	public Guid? RawId { get; set; }
	[ForeignKey("RawId")]
	public tstRawDbEntity Raw { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("OwnerContainer_Raw_Raws")]
public partial class tstOwnerContainer_tstRaw_Raws : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstOwnerContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("OwnerContainers")]
public partial class tstOwnerContainerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Index { get; set; } = 0;

	// Relationship to tstRaw, Owned
	public ICollection<tstOwnerContainer_tstRaw_Raws> Raws { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("Parent_Child_Children")]
public partial class tstParent_tstChild_Children : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstParentDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstChildDbEntity Child { get; set; }
}
[Table("Parents")]
public partial class tstParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstChild, Owned
	public ICollection<tstParent_tstChild_Children> Children { get; set; }

	// Navigation properties
	// Back relationship for tstChild.SecondParentId
	[InverseProperty(nameof(tstChildDbEntity.SecondParent))]
	public List<tstChildDbEntity> Children_SecondParent { get; set; } = new List<tstChildDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("ParentWithSharedList_Raw_RawLists")]
public partial class tstParentWithSharedList_tstRaw_RawLists : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstParentWithSharedListDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("ParentWithSharedLists")]
public partial class tstParentWithSharedListDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstRaw, Shared
	public ICollection<tstParentWithSharedList_tstRaw_RawLists> RawLists { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("Raws")]
public partial class tstRawDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Index { get; set; } = 0;
	public DateTime DateTime { get; set; } = DateTime.UtcNow;
	// Navigation properties
	// Back relationship for tstMixedContainer.OwnedIds, Owned
	[InverseProperty(nameof(tstMixedContainer_tstRaw_Owneds.Child))]
	public List<tstMixedContainer_tstRaw_Owneds> MixedContainers_Owneds { get; set; }
	// Back relationship for tstMixedContainer.SharedIds, Shared
	[InverseProperty(nameof(tstMixedContainer_tstRaw_Shareds.Child))]
	public List<tstMixedContainer_tstRaw_Shareds> MixedContainers_Shareds { get; set; }
	// Back relationship for tstMultipleSharedContainer.FirstSharedIds, Shared
	[InverseProperty(nameof(tstMultipleSharedContainer_tstRaw_FirstShareds.Child))]
	public List<tstMultipleSharedContainer_tstRaw_FirstShareds> MultipleSharedContainers_FirstShareds { get; set; }
	// Back relationship for tstMultipleSharedContainer.SecondSharedIds, Shared
	[InverseProperty(nameof(tstMultipleSharedContainer_tstRaw_SecondShareds.Child))]
	public List<tstMultipleSharedContainer_tstRaw_SecondShareds> MultipleSharedContainers_SecondShareds { get; set; }
	// Back relationship for tstMultipleSharedRef.RawId
	[InverseProperty(nameof(tstMultipleSharedRefDbEntity.Raw))]
	public List<tstMultipleSharedRefDbEntity> MultipleSharedRefs_Raw { get; set; } = new List<tstMultipleSharedRefDbEntity>();
	// Back relationship for tstMultipleSharedRef.OptionalRawId
	[InverseProperty(nameof(tstMultipleSharedRefDbEntity.OptionalRaw))]
	public List<tstMultipleSharedRefDbEntity> MultipleSharedRefs_OptionalRaw { get; set; } = new List<tstMultipleSharedRefDbEntity>();
	// Back relationship for tstNestedCompositeRoot.OptionalRawId
	[InverseProperty(nameof(tstNestedCompositeRootDbEntity.OptionalRaw))]
	public List<tstNestedCompositeRootDbEntity> NestedCompositeRoots_OptionalRaw { get; set; } = new List<tstNestedCompositeRootDbEntity>();
	// Back relationship for tstNestedCompositeRoot.RawListIds, Shared
	[InverseProperty(nameof(tstNestedCompositeRoot_tstRaw_RawLists.Child))]
	public List<tstNestedCompositeRoot_tstRaw_RawLists> NestedCompositeRoots_RawLists { get; set; }
	// Back relationship for tstOptionalSharedRef.RawId
	[InverseProperty(nameof(tstOptionalSharedRefDbEntity.Raw))]
	public List<tstOptionalSharedRefDbEntity> OptionalSharedRefs_Raw { get; set; } = new List<tstOptionalSharedRefDbEntity>();
	// Back relationship for tstOwnerContainer.RawIds, Owned
	[InverseProperty(nameof(tstOwnerContainer_tstRaw_Raws.Child))]
	public List<tstOwnerContainer_tstRaw_Raws> OwnerContainers_Raws { get; set; }
	// Back relationship for tstParentWithSharedList.RawListIds, Shared
	[InverseProperty(nameof(tstParentWithSharedList_tstRaw_RawLists.Child))]
	public List<tstParentWithSharedList_tstRaw_RawLists> ParentWithSharedLists_RawLists { get; set; }
	// Back relationship for tstRequiredSharedRef.RawId
	[InverseProperty(nameof(tstRequiredSharedRefDbEntity.Raw))]
	public List<tstRequiredSharedRefDbEntity> RequiredSharedRefs_Raw { get; set; } = new List<tstRequiredSharedRefDbEntity>();
	// Back relationship for tstSharedContainer.SharedIds, Shared
	[InverseProperty(nameof(tstSharedContainer_tstRaw_Shareds.Child))]
	public List<tstSharedContainer_tstRaw_Shareds> SharedContainers_Shareds { get; set; }
	// Back relationship for tstT008Parent.RawId
	[InverseProperty(nameof(tstT008ParentDbEntity.Raw))]
	public List<tstT008ParentDbEntity> T008Parents_Raw { get; set; } = new List<tstT008ParentDbEntity>();
	// Back relationship for tstT014AutoCreateValue.ReferenceId
	[InverseProperty(nameof(tstT014AutoCreateValueDbEntity.Reference))]
	public List<tstT014AutoCreateValueDbEntity> T014AutoCreateValues_Reference { get; set; } = new List<tstT014AutoCreateValueDbEntity>();
	// Back relationship for tstT010CompositeRefChild.RawId
	[InverseProperty(nameof(tstT010CompositeRefChildDbEntity.Raw))]
	public List<tstT010CompositeRefChildDbEntity> T010CompositeRefChildren_Raw { get; set; } = new List<tstT010CompositeRefChildDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("RequiredSharedRefs")]
public partial class tstRequiredSharedRefDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public Guid Value { get; set; } = Guid.Empty;

	// Reference to tstRaw
	public Guid RawId { get; set; }
	[ForeignKey("RawId")]
	public tstRawDbEntity Raw { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("SharedContainer_Raw_Shareds")]
public partial class tstSharedContainer_tstRaw_Shareds : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstSharedContainerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstRawDbEntity Child { get; set; }
}
[Table("SharedContainers")]
public partial class tstSharedContainerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstRaw, Shared
	public ICollection<tstSharedContainer_tstRaw_Shareds> Shareds { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T001Children")]
public partial class tstT001ChildDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstCompositeChild
	public Guid CompositeChildId { get; set; }
	[ForeignKey("CompositeChildId")]
	public tstCompositeChildDbEntity CompositeChild { get; set; }

	// Navigation properties
	// Back relationship for tstT001ParentOwner.T001ChildrenIds, Owned
	[InverseProperty(nameof(tstT001ParentOwner_tstT001Child_T001Children.Child))]
	public List<tstT001ParentOwner_tstT001Child_T001Children> T001ParentOwners_T001Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T001ParentOwner_T001Child_T001Children")]
public partial class tstT001ParentOwner_tstT001Child_T001Children : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT001ParentOwnerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT001ChildDbEntity Child { get; set; }
}
[Table("T001ParentOwners")]
public partial class tstT001ParentOwnerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT001Child, Owned
	public ICollection<tstT001ParentOwner_tstT001Child_T001Children> T001Children { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T002Children")]
public partial class tstT002ChildDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	string _Name = "";
	public string Name { get => _Name ?? ""; set => _Name = value; }
	// Navigation properties
	// Back relationship for tstT002ChildHolder.T002ChildId
	[InverseProperty(nameof(tstT002ChildHolderDbEntity.T002Child))]
	public List<tstT002ChildHolderDbEntity> T002ChildHolders_T002Child { get; set; } = new List<tstT002ChildHolderDbEntity>();
	// Back relationship for tstT002ParentOwner.T002ChildrenIds, Owned
	[InverseProperty(nameof(tstT002ParentOwner_tstT002Child_T002Children.Child))]
	public List<tstT002ParentOwner_tstT002Child_T002Children> T002ParentOwners_T002Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T002ChildHolders")]
public partial class tstT002ChildHolderDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Iteration { get; set; } = 0;

	// Reference to tstT002Child
	public Guid? T002ChildId { get; set; }
	[ForeignKey("T002ChildId")]
	public tstT002ChildDbEntity T002Child { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T002ParentOwner_T002Child_T002Children")]
public partial class tstT002ParentOwner_tstT002Child_T002Children : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT002ParentOwnerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT002ChildDbEntity Child { get; set; }
}
[Table("T002ParentOwners")]
public partial class tstT002ParentOwnerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Iteration { get; set; } = 0;

	// Relationship to tstT002Child, Owned
	public ICollection<tstT002ParentOwner_tstT002Child_T002Children> T002Children { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T003Children")]
public partial class tstT003ChildDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	string _Name = "";
	public string Name { get => _Name ?? ""; set => _Name = value; }
	// Navigation properties
	// Back relationship for tstT003ChildHolder.T003ChildId
	[InverseProperty(nameof(tstT003ChildHolderDbEntity.T003Child))]
	public List<tstT003ChildHolderDbEntity> T003ChildHolders_T003Child { get; set; } = new List<tstT003ChildHolderDbEntity>();
	// Back relationship for tstT003ParentOwner.T003ChildrenIds, Owned
	[InverseProperty(nameof(tstT003ParentOwner_tstT003Child_T003Children.Child))]
	public List<tstT003ParentOwner_tstT003Child_T003Children> T003ParentOwners_T003Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T003ChildHolders")]
public partial class tstT003ChildHolderDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Iteration { get; set; } = 0;

	// Reference to tstT003Child
	public Guid? T003ChildId { get; set; }
	[ForeignKey("T003ChildId")]
	public tstT003ChildDbEntity T003Child { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T003ParentOwner_T003Child_T003Children")]
public partial class tstT003ParentOwner_tstT003Child_T003Children : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT003ParentOwnerDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT003ChildDbEntity Child { get; set; }
}
[Table("T003ParentOwners")]
public partial class tstT003ParentOwnerDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Iteration { get; set; } = 0;

	// Relationship to tstT003Child, Owned
	public ICollection<tstT003ParentOwner_tstT003Child_T003Children> T003Children { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T004RecursiveLinkSet_T004RecursiveLinkSet_RecursiveLinks")]
public partial class tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks : IAssortedLatestLinkTable
{
	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT004RecursiveLinkSetDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT004RecursiveLinkSetDbEntity Child { get; set; }
}
[Table("T004RecursiveLinkSets")]
public partial class tstT004RecursiveLinkSetDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT004RecursiveLinkSet, Shared
	public ICollection<tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks> RecursiveLinks { get; set; }

	// Navigation properties
	// Back relationship for tstT004RecursiveLinkSet.RecursiveLinkIds, Shared
	[InverseProperty(nameof(tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks.Child))]
	public List<tstT004RecursiveLinkSet_tstT004RecursiveLinkSet_RecursiveLinks> T004RecursiveLinkSets_RecursiveLinks { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T005RecursiveLinkList_T005RecursiveLinkList_RecursiveLinks")]
public partial class tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT005RecursiveLinkListDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT005RecursiveLinkListDbEntity Child { get; set; }
}
[Table("T005RecursiveLinkLists")]
public partial class tstT005RecursiveLinkListDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT005RecursiveLinkList, Shared
	public ICollection<tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks> RecursiveLinks { get; set; }

	// Navigation properties
	// Back relationship for tstT005RecursiveLinkList.RecursiveLinkIds, Shared
	[InverseProperty(nameof(tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks.Child))]
	public List<tstT005RecursiveLinkList_tstT005RecursiveLinkList_RecursiveLinks> T005RecursiveLinkLists_RecursiveLinks { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T006PerfMaxQueryItems")]
public partial class tstT006PerfMaxQueryItemDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Value { get; set; } = 0;
	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T006PerfMaxQueryValues")]
public partial class tstT006PerfMaxQueryValueDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Value { get; set; } = 0;
	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T007Leaf_T007Leaf_T007Leaves")]
public partial class tstT007Leaf_tstT007Leaf_T007Leaves : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT007LeafDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT007LeafDbEntity Child { get; set; }
}
[Table("T007Leaves")]
public partial class tstT007LeafDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT007Leaf, Owned
	public ICollection<tstT007Leaf_tstT007Leaf_T007Leaves> T007Leaves { get; set; }

	// Navigation properties
	// Back relationship for tstT007Leaf.T007LeafIds, Owned
	[InverseProperty(nameof(tstT007Leaf_tstT007Leaf_T007Leaves.Child))]
	public List<tstT007Leaf_tstT007Leaf_T007Leaves> T007Leaves_T007Leaves { get; set; }
	// Back relationship for tstT007Root.T007LeafIds, Owned
	[InverseProperty(nameof(tstT007Root_tstT007Leaf_T007Leaves.Child))]
	public List<tstT007Root_tstT007Leaf_T007Leaves> T007Roots_T007Leaves { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T007Root_T007Leaf_T007Leaves")]
public partial class tstT007Root_tstT007Leaf_T007Leaves : IOrderedLatestLinkTable
{
	public int Order { get; set; }

	public Guid ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT007RootDbEntity Parent { get; set; }

	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT007LeafDbEntity Child { get; set; }
}
[Table("T007Roots")]
public partial class tstT007RootDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT007Leaf, Owned
	public ICollection<tstT007Root_tstT007Leaf_T007Leaves> T007Leaves { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T008Parents")]
public partial class tstT008ParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstCompositeChild
	public Guid ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstCompositeChildDbEntity Child { get; set; }


	// Reference to tstRaw
	public Guid RawId { get; set; }
	[ForeignKey("RawId")]
	public tstRawDbEntity Raw { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T009Composites")]
public partial class tstT009CompositeDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public int Value { get; set; } = 0;
	// Navigation properties
	// Back relationship for tstT009Principal.Composite
	[InverseProperty(nameof(tstT009PrincipalDbEntity.Composite))]
	public List<tstT009PrincipalDbEntity> T009Principals_Composite { get; set; } = new List<tstT009PrincipalDbEntity>();
	// Back reference for tstT009Principal.T009CompositeIds
	public Guid? T009PrincipalId { get; set; }
	[ForeignKey("T009PrincipalId")]
	public tstT009PrincipalDbEntity T009Principal { get; set; }
	public int IndexInT009Principal { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T009Principals")]
public partial class tstT009PrincipalDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;
	public int Value { get; set; } = 0;

	// Reference to tstT009Composite
	public Guid CompositeId { get; set; }
	[ForeignKey("CompositeId")]
	public tstT009CompositeDbEntity Composite { get; set; }


	// Relationship to tstT009Composite, Coposite
	public List<tstT009CompositeDbEntity> T009Composites { get; set; } = new List<tstT009CompositeDbEntity>();

	// Navigation properties
	// Back relationship for tstT009User.PrincipalId
	[InverseProperty(nameof(tstT009UserDbEntity.Principal))]
	public List<tstT009UserDbEntity> T009Users_Principal { get; set; } = new List<tstT009UserDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("T009Users")]
public partial class tstT009UserDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstT009Principal
	public Guid PrincipalId { get; set; }
	[ForeignKey("PrincipalId")]
	public tstT009PrincipalDbEntity Principal { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T010CompositeRefParents")]
public partial class tstT010CompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Relationship to tstT010CompositeRefChild, Coposite
	public List<tstT010CompositeRefChildDbEntity> T010CompositeRefChildren { get; set; } = new List<tstT010CompositeRefChildDbEntity>();


	// Reference to tstT010CompositeRefChild
	public Guid T010CompositeRefChildId { get; set; }
	[ForeignKey("T010CompositeRefChildId")]
	public tstT010CompositeRefChildDbEntity T010CompositeRefChild { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T011CompositeRefParents")]
public partial class tstT011CompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstT011CompositeRefParentContainer
	public Guid ContainerId { get; set; }
	[ForeignKey("ContainerId")]
	public tstT011CompositeRefParentContainerDbEntity Container { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T011CompositeRefParentContainers")]
public partial class tstT011CompositeRefParentContainerDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();

	// Relationship to tstCompositeChild, Coposite
	public List<tstCompositeChildDbEntity> CompositeChildren { get; set; } = new List<tstCompositeChildDbEntity>();


	// Reference to tstCompositeChild
	public Guid CompositeChildId { get; set; }
	[ForeignKey("CompositeChildId")]
	public tstCompositeChildDbEntity CompositeChild { get; set; }

	// Navigation properties
	// Back relationship for tstT011CompositeRefParent.Container
	[InverseProperty(nameof(tstT011CompositeRefParentDbEntity.Container))]
	public List<tstT011CompositeRefParentDbEntity> T011CompositeRefParents_Container { get; set; } = new List<tstT011CompositeRefParentDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("T012CompositeRefParents")]
public partial class tstT012CompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstT012CompositeRefParentContainer
	public Guid ContainerId { get; set; }
	[ForeignKey("ContainerId")]
	public tstT012CompositeRefParentContainerDbEntity Container { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T012CompositeRefParentContainers")]
public partial class tstT012CompositeRefParentContainerDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();

	// Reference to tstCompositeChild
	public Guid CompositeChildId { get; set; }
	[ForeignKey("CompositeChildId")]
	public tstCompositeChildDbEntity CompositeChild { get; set; }

	// Navigation properties
	// Back relationship for tstT012CompositeRefParent.Container
	[InverseProperty(nameof(tstT012CompositeRefParentDbEntity.Container))]
	public List<tstT012CompositeRefParentDbEntity> T012CompositeRefParents_Container { get; set; } = new List<tstT012CompositeRefParentDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("T013CompositeRefParents")]
public partial class tstT013CompositeRefParentDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstT013CompositeRefParentContainer
	public Guid ContainerId { get; set; }
	[ForeignKey("ContainerId")]
	public tstT013CompositeRefParentContainerDbEntity Container { get; set; }

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T013CompositeRefParentContainers")]
public partial class tstT013CompositeRefParentContainerDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();

	// Relationship to tstCompositeChild, Coposite
	public List<tstCompositeChildDbEntity> CompositeChildren { get; set; } = new List<tstCompositeChildDbEntity>();

	// Navigation properties
	// Back relationship for tstT013CompositeRefParent.Container
	[InverseProperty(nameof(tstT013CompositeRefParentDbEntity.Container))]
	public List<tstT013CompositeRefParentDbEntity> T013CompositeRefParents_Container { get; set; } = new List<tstT013CompositeRefParentDbEntity>();
}
// generated class, do not modify, source here: file:///placeholder
[Table("T014AutoCreateValues")]
public partial class tstT014AutoCreateValueDbEntity : ITopLevelDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	public bool IsSystem { get; set; } = false;
	public long Revision { get; set; } = 0;
	public DateTime DateCreated { get; set; } = DateTime.UtcNow;
	public DateTime DateUpdated { get; set; } = DateTime.UtcNow;

	// Reference to tstRaw
	public Guid ReferenceId { get; set; }
	[ForeignKey("ReferenceId")]
	public tstRawDbEntity Reference { get; set; }

	public bool BooleanValue1 { get; set; } = true;
	public bool BooleanValue2 { get; set; } = true;
	public int IntValue { get; set; } = 42;
	public decimal DecimalValue { get; set; } = 42;
	public tstT014State EnumValue { get; set; } = tstT014State.State1;
	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015ChildL1Record_T015ChildL2Record_Children")]
public partial class tstT015ChildL1Record_tstT015ChildL2Record_Children : IAssortedLatestRecordLinkTable
{
	public long ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT015ChildL1RecordDbRecord Parent { get; set; }

	public long ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT015ChildL2RecordDbRecord Child { get; set; }
}
[Table("T015ChildL1Records")]
public partial class tstT015ChildL1RecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ChildL1Value { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }

	// Record Reference to tstT015ChildL2Record
	public long? OptionalChildId { get; set; }
	[ForeignKey("OptionalChildId")]
	public tstT015ChildL2RecordDbRecord OptionalChild { get; set; }


	// Record Reference to tstT015ChildL2Record
	public long RequiredChildId { get; set; }
	[ForeignKey("RequiredChildId")]
	public tstT015ChildL2RecordDbRecord RequiredChild { get; set; }


	// Record Relationship to tstT015ChildL2Record, Shared
	public ICollection<tstT015ChildL1Record_tstT015ChildL2Record_Children> Children { get; set; }

	// Navigation properties
	// Back relationship for tstT015ParentOrderedRecord.OrderedChildrenIds, Shared
	[InverseProperty(nameof(tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren.Child))]
	public List<tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren> T015ParentOrderedRecords_OrderedChildren { get; set; }
	// Back relationship for tstT015ParentRecord.OptionalChildId
	[InverseProperty(nameof(tstT015ParentRecordDbRecord.OptionalChild))]
	public List<tstT015ParentRecordDbRecord> T015ParentRecords_OptionalChild { get; set; } = new List<tstT015ParentRecordDbRecord>();
	// Back relationship for tstT015ParentRecord.RequiredChildId
	[InverseProperty(nameof(tstT015ParentRecordDbRecord.RequiredChild))]
	public List<tstT015ParentRecordDbRecord> T015ParentRecords_RequiredChild { get; set; } = new List<tstT015ParentRecordDbRecord>();
	// Back relationship for tstT015ParentRecord.ChildrenIds, Shared
	[InverseProperty(nameof(tstT015ParentRecord_tstT015ChildL1Record_Children.Child))]
	public List<tstT015ParentRecord_tstT015ChildL1Record_Children> T015ParentRecords_Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015ChildL2Records")]
public partial class tstT015ChildL2RecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ChildL2Value { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }
	// Navigation properties
	// Back relationship for tstT015ChildL1Record.OptionalChildId
	[InverseProperty(nameof(tstT015ChildL1RecordDbRecord.OptionalChild))]
	public List<tstT015ChildL1RecordDbRecord> T015ChildL1Records_OptionalChild { get; set; } = new List<tstT015ChildL1RecordDbRecord>();
	// Back relationship for tstT015ChildL1Record.RequiredChildId
	[InverseProperty(nameof(tstT015ChildL1RecordDbRecord.RequiredChild))]
	public List<tstT015ChildL1RecordDbRecord> T015ChildL1Records_RequiredChild { get; set; } = new List<tstT015ChildL1RecordDbRecord>();
	// Back relationship for tstT015ChildL1Record.ChildrenIds, Shared
	[InverseProperty(nameof(tstT015ChildL1Record_tstT015ChildL2Record_Children.Child))]
	public List<tstT015ChildL1Record_tstT015ChildL2Record_Children> T015ChildL1Records_Children { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015ChildOwnedRecords")]
public partial class tstT015ChildOwnedRecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ChildL2Value { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }
	// Navigation properties
	// Back relationship for tstT015ParentOrderedRecord.OrderedOwnedChildrenIds, Shared
	[InverseProperty(nameof(tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren.Child))]
	public List<tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren> T015ParentOrderedRecords_OrderedOwnedChildren { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015CompositeChildren")]
public partial class tstT015CompositeChildDbRecord : IDbRecord
{
	public long Id { get; set; }
	public int ChildL1Value { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }
	// Navigation properties
	// Back reference for tstT015ParentOrderedRecord.CompositeOderedChildrenIds
	public long? T015ParentOrderedRecordId { get; set; }
	[ForeignKey("T015ParentOrderedRecordId")]
	public tstT015ParentOrderedRecordDbRecord T015ParentOrderedRecord { get; set; }
	public int IndexInT015ParentOrderedRecord { get; set; }
	// Back relationship for tstT015ParentRecord.OptionalCompositeChildId
	[InverseProperty(nameof(tstT015ParentRecordDbRecord.OptionalCompositeChild))]
	public List<tstT015ParentRecordDbRecord> T015ParentRecords_OptionalCompositeChild { get; set; } = new List<tstT015ParentRecordDbRecord>();
	// Back relationship for tstT015ParentRecord.RequiredCompositeChildId
	[InverseProperty(nameof(tstT015ParentRecordDbRecord.RequiredCompositeChild))]
	public List<tstT015ParentRecordDbRecord> T015ParentRecords_RequiredCompositeChild { get; set; } = new List<tstT015ParentRecordDbRecord>();
	// Back reference for tstT015ParentRecord.CompositeChildrenIds
	public long? T015ParentRecordId { get; set; }
	[ForeignKey("T015ParentRecordId")]
	public tstT015ParentRecordDbRecord T015ParentRecord { get; set; }
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015ParentOrderedRecord_T015ChildOwnedRecord_OrderedOwnedChildren")]
public partial class tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren : IOrderedLatestRecordLinkTable
{
	public int Order { get; set; }

	public long ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT015ParentOrderedRecordDbRecord Parent { get; set; }

	public long ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT015ChildOwnedRecordDbRecord Child { get; set; }
}
[Table("T015ParentOrderedRecord_T015ChildL1Record_OrderedChildren")]
public partial class tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren : IOrderedLatestRecordLinkTable
{
	public int Order { get; set; }

	public long ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT015ParentOrderedRecordDbRecord Parent { get; set; }

	public long ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT015ChildL1RecordDbRecord Child { get; set; }
}
[Table("T015ParentOrderedRecords")]
public partial class tstT015ParentOrderedRecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ParentValue { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }

	// Record Relationship to tstT015ChildOwnedRecord, Shared
	public ICollection<tstT015ParentOrderedRecord_tstT015ChildOwnedRecord_OrderedOwnedChildren> OrderedOwnedChildren { get; set; }


	// Record Relationship to tstT015ChildL1Record, Shared
	public ICollection<tstT015ParentOrderedRecord_tstT015ChildL1Record_OrderedChildren> OrderedChildren { get; set; }


	// Record Relationship to tstT015CompositeChild, Coposite
	public List<tstT015CompositeChildDbRecord> CompositeOderedChildren { get; set; } = new List<tstT015CompositeChildDbRecord>();

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T015ParentRecord_T015ChildL1Record_Children")]
public partial class tstT015ParentRecord_tstT015ChildL1Record_Children : IAssortedLatestRecordLinkTable
{
	public long ParentId { get; set; }
	[ForeignKey("ParentId")]
	public tstT015ParentRecordDbRecord Parent { get; set; }

	public long ChildId { get; set; }
	[ForeignKey("ChildId")]
	public tstT015ChildL1RecordDbRecord Child { get; set; }
}
[Table("T015ParentRecords")]
public partial class tstT015ParentRecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ParentValue { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }

	// Record Reference to tstT015ChildL1Record
	public long? OptionalChildId { get; set; }
	[ForeignKey("OptionalChildId")]
	public tstT015ChildL1RecordDbRecord OptionalChild { get; set; }


	// Record Reference to tstT015ChildL1Record
	public long RequiredChildId { get; set; }
	[ForeignKey("RequiredChildId")]
	public tstT015ChildL1RecordDbRecord RequiredChild { get; set; }


	// Record Relationship to tstT015ChildL1Record, Shared
	public ICollection<tstT015ParentRecord_tstT015ChildL1Record_Children> Children { get; set; }


	// Record Reference to tstT015CompositeChild
	public long? OptionalCompositeChildId { get; set; }
	[ForeignKey("OptionalCompositeChildId")]
	public tstT015CompositeChildDbRecord OptionalCompositeChild { get; set; }


	// Record Reference to tstT015CompositeChild
	public long RequiredCompositeChildId { get; set; }
	[ForeignKey("RequiredCompositeChildId")]
	public tstT015CompositeChildDbRecord RequiredCompositeChild { get; set; }


	// Record Relationship to tstT015CompositeChild, Coposite
	public List<tstT015CompositeChildDbRecord> CompositeChildren { get; set; } = new List<tstT015CompositeChildDbRecord>();

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T016CompositeParentRecords")]
public partial class tstT016CompositeParentRecordDbRecord : ITopLevelDbRecord
{
	public long Id { get; set; }
	public long Revision { get; set; } = 0;
	public int ParentValue { get; set; } = 0;
	string _Comments = "";
	public string Comments { get => _Comments ?? ""; set => _Comments = value; }

	// Record Relationship to tstT016CompositeChildRecord, Coposite
	public List<tstT016CompositeChildRecordDbRecord> Children { get; set; } = new List<tstT016CompositeChildRecordDbRecord>();

	// Navigation properties
}
// generated class, do not modify, source here: file:///placeholder
[Table("T010CompositeRefChildren")]
public partial class tstT010CompositeRefChildDbEntity : IDbEntity
{
	public Guid Id { get; set; } = Guid.NewGuid();
	string _Value = "";
	public string Value { get => _Value ?? ""; set => _Value = value; }

	// Reference to tstRaw
	public Guid RawId { get; set; }
	[ForeignKey("RawId")]
	public tstRawDbEntity Raw { get; set; }

	// Navigation properties
	// Back relationship for tstT010CompositeRefParent.T010CompositeRefChild
	[InverseProperty(nameof(tstT010CompositeRefParentDbEntity.T010CompositeRefChild))]
	public List<tstT010CompositeRefParentDbEntity> T010CompositeRefParents_T010CompositeRefChild { get; set; } = new List<tstT010CompositeRefParentDbEntity>();
	// Back reference for tstT010CompositeRefParent.T010CompositeRefChildrenIds
	public Guid? T010CompositeRefParentId { get; set; }
	[ForeignKey("T010CompositeRefParentId")]
	public tstT010CompositeRefParentDbEntity T010CompositeRefParent { get; set; }
	public int IndexInT010CompositeRefParent { get; set; }
}
}
#pragma warning restore CS0612 // Type or member is obsolete
#pragma warning restore CS0105 // Using directive appeared previously in this namespace
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
#pragma warning restore IDE0028 // Collection Initialization
#pragma warning restore IDE0017 // Object Initialization
#pragma warning restore IDE1006 // Naming Styles
